#pragma checksum "C:\Users\Sheheryar Izhar\source\repos\InternetSpeedTesting\InternetSpeedTesting\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "3653431992537354121844fe8506f999239dcd91"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Sheheryar Izhar\source\repos\InternetSpeedTesting\InternetSpeedTesting\Views\_ViewImports.cshtml"
using InternetSpeedTesting;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Sheheryar Izhar\source\repos\InternetSpeedTesting\InternetSpeedTesting\Views\_ViewImports.cshtml"
using InternetSpeedTesting.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3653431992537354121844fe8506f999239dcd91", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"07ccf26177670d21d1ba523220c74032e9f14248", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\Sheheryar Izhar\source\repos\InternetSpeedTesting\InternetSpeedTesting\Views\Home\Index.cshtml"
   ViewData["Title"] = "Home Page"; 

#line default
#line hidden
#nullable disable
            WriteLiteral("\n<!DOCTYPE html>\n<html lang=\"en\">\n\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3653431992537354121844fe8506f999239dcd913612", async() => {
                WriteLiteral(@"
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <meta http-equiv=""X-UA-Compatible"" content=""ie=edge"">
    <title>Document</title>

    <style>
        body {
            background: snow;
        }

        .card {
            background-color: #dbf1d7;
            width: 400px;
            padding: 20px;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            box-shadow: 0 3px 10px rgb(0 0 0);
        }

        .card2 {
            /* transform: translate(-50%,-50%);
            box-shadow: 0 3px 10px rgb(0 0 0);
            background-color: #dbf1d7; */
            width: 110px;
            padding: 0px;
            position: absolute;
            top: 65%;
            left: 45%;
        }

        #asd {
            font-size: 5em;
            line-height: 1.3em;
            text-align: center;
            border-radius: 50%;
        }

        /*#result {
            f");
                WriteLiteral(@"ont-size: 5em;
            line-height: 1.3em;
            text-align: center;
        }*/

    </style>

    <script>window.addEventListener('load', () => {
  function TestSpeedNow() {
     SpeedTest(
         [
              '/assets/20MB.zip',
             // '/assets/movie.mp4',
             // '/assets/10MB.zip',
             //'/assets/USA_latest.pdf',
             //'/assets/5MB.zip',
             ]);

  }

  document.getElementById('asd').addEventListener('click', ()=>{
      TestSpeedNow();
      console.log('123');
  });

var totalLatency = [];

    function SpeedTest(file_urls){

        if(file_urls != null && file_urls.length > 0){
            document.querySelector('.speed').innerHTML = '0';
            document.querySelector('.time').innerHTML = '0';
            document.querySelector('.latency').innerHTML = '0';
            document.querySelector('.files').innerHTML = file_urls.length;
            var count = 0;
            var tTime = 0.00;
            var tSize = 0.00;
            for(var i ");
                WriteLiteral(@"= 0; i < file_urls.length;i++)
            {

                const start = Date.now();
                const url = file_urls[i];
                const xhr = new XMLHttpRequest();

                let end;
                let size;
                let time;
                let latency1;

                xhr.addEventListener(""progress"", updateProgress);
                xhr.addEventListener(""load"", transferComplete);
                xhr.addEventListener(""error"", transferFailed);
                xhr.addEventListener(""abort"", transferCanceled);

                xhr.open('GET', url+""?GUID="" + (new Date().getTime()+Math.floor(Math.random() * 50)));
                xhr.setRequestHeader(""Cache-Control"", ""max-age=0"");

                xhr.send();


                function updateProgress(oEvent) {
                  if (oEvent.lengthComputable) {
                    if (!size) {

                      latency1 = Date.now();

                      //totalLatency = latency1 - start;

                      totalLatency.pu");
                WriteLiteral(@"sh(latency1 - start);


                      document.querySelector('.latency').innerHTML = `${Number.parseFloat(totalLatency).toFixed(2)} ms`;

                      size = oEvent.total;
                      document.querySelector('.size').innerHTML = `${Number.parseFloat(size / 1024 / 1024).toFixed(2)} MB`;
                    }

                    var percentComplete = oEvent.loaded / oEvent.total * 100;
                    document.querySelector('.progress').innerHTML = `${parseInt(percentComplete, 10)}%`;
                  }
                }

                function transferComplete(evt) {
                  console.log('The transfer is complete.');
                  end = Date.now();

                  time = (end - start)/ 1000;
                  stime = (end - start);



                  //document.querySelector('.time').innerHTML = `${parseInt(time, 10)}`;//seconds
                  //document.querySelector('.speed').innerHTML = `${Number.parseFloat((size / time / 1024))}`; // kB/s

            ");
                WriteLiteral(@"      console.log(`${time} ${Number.parseFloat(size / time / 1024)}`);
                  tTime += stime;
                  tSize += Number.parseFloat((size / time / 1024));

                  count++;
                  if(count == i){
                      console.log(""done: ""+tTime+""--""+tSize);
                       document.querySelector('.time').innerHTML = `${parseInt(tTime, 10)} ms`;//seconds
                        document.querySelector('.speed').innerHTML = `${Number.parseFloat((tSize/file_urls.length)/1024*8).toFixed(2)} Mbps`; // Mbps/s
                  }

                }

                function transferFailed(evt) {
                  console.log('An error occurred while transferring the file.');
                }

                function transferCanceled(evt) {
                  console.log('The transfer has been canceled by the user.');
                }
            }
        }
    }


  });</script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3653431992537354121844fe8506f999239dcd919776", async() => {
                WriteLiteral(@"

    <div class='card'>
        <div>
            Total Files to test speed are: <b><span class=""files"">0</span></b>
        </div>
        <br />
        <div>
            Current File Progress: <span class=""progress"">0%</span>
        </div>

        <div>
            Current File size: <span class=""size"">0</span>
        </div>

        <div>
            Total Time: <span class=""time"">0</span>
        </div>

        <div>
            Speed: <span class=""speed"">0</span>
        </div>

        <div>
            Latency: <span class=""latency"">0</span>
        </div>
    </div>
    <br />

    <div class=""card2"">
        <div>
            <button id=""asd"">Go</button>
        </div>
    </div>


");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n\n</html>");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
